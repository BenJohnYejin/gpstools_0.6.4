function ephtosp3(varargin)
%-------------------------------------------------------------------------------
% [system] : GpsTools
% [module] : convert ephemeris estimation to sp3 format
% [func]   : convert ephemeris estimation to sp3 format
% [argin]  : (opts) = options
%                'td',td     : date (mjd)
%                'span',span : time span (days)    (default:1)
%                'tint',tint : time interval (sec) (default:900)
%                'sats',sats : satellite list      (default:all)
%                'file',file : file name           (default:'ephs')
%                'idir',idir : input estimation directory
%                'odir',odir : output products directory
%                'vel'       : contain satellite velocity estimation
%                'leo'       : leo satellite orbit/clock
%                'fb',fb     : use forward/backward estimation
%                              ('f':forward,'b':backward,'fb':smoothed)
% [argout] : none
% [note]   :
% [version]: $Revision: 3 $ $Date: 06/07/14 19:03 $
%            Copyright(c) 2004-2006 by T.Takasu, all rights reserved
% [history]: 04/11/17  0.1  new
%            05/01/03  0.2  support estimated erp
%            05/06/28  0.3  add option fb, delete option back
%            05/08/15  0.4  add leo satellite pos/clk option
%-------------------------------------------------------------------------------
prm=loadprm('prm_gpsest');
[td,ts]=caltomjd(prm.tstart); span=1; tint=900; sats=prm.sats; fname='ephs';
idir=''; odir=''; pv='P'; leo=0; fb='fb'; agency=''; comment=''; n=1;
while n<=length(varargin)
    switch varargin{n}
    case 'td',    td    =varargin{n+1}; n=n+2;
    case 'span',  span  =varargin{n+1}; n=n+2;
    case 'tint',  tint  =varargin{n+1}; n=n+2;
    case 'sats',  sats  =varargin{n+1}; n=n+2;
    case 'file',  fname =varargin{n+1}; n=n+2;
    case 'idir',  idir  =varargin{n+1}; n=n+2;
    case 'odir',  odir  =varargin{n+1}; n=n+2;
    case 'agency',  agency =varargin{n+1}; n=n+2;
    case 'comment', comment=varargin{n+1}; n=n+2;
    case 'fb',    fb    =varargin{n+1}; n=n+2;
    case 'vel',   pv='V'; n=n+1;
    case 'leo',   leo=1; n=n+1;
    otherwise, n=n+1; end
end
if ischar(sats), sats={sats}; end

for td=td:td+span-1
    time=0:tint:86400-tint;
    if ~leo
        [ephs,clks,refc]=ReadEphClk(td,time,sats,idir,fb,prm.tunit);
    else
        [ephs,clks,refc]=ReadPosClk(td,time,sats,idir,fb,prm.tunit);
    end
    if ~isempty(ephs)
        gpsd=td-44244; gpsw=floor(gpsd/7);
        file=sprintf('%s%04d%1d.sp3',fname,gpsw,floor(gpsd-gpsw*7));
        file=fullfile(odir,file);
        f=fopen(file,'wt');
        if f>0
            WriteHeader(f,td,time,sats,gpsw,gpsd,pv,refc,agency,comment,leo);
            WriteBody(f,td,time,sats,ephs,clks,pv,leo);
            fclose(f);
            disp(['save : ',file])
        end
    end
end

% write sp3 header -------------------------------------------------------------
function WriteHeader(f,td,time,sats,gpsw,gpsd,pv,refc,agency,comment,leo)

fprintf(f,'#a%c%04d %2d %2d %2d %2d %11.8f %7d %5s %4s %3s %4s\n',...
        pv,mjdtocal(td,0),length(time),'U','IGS00','FIT',agency);
fprintf(f,'## %4d %15.8f %14.8f %5d %15.13f\n',gpsw,(gpsd-gpsw*7)*86400,...
        time(2)-time(1),td,0);
n=0; ns=length(sats);
for m=1:5
    if m==1, fprintf(f,'+   %2d   ',ns); else fprintf(f,'+        '); end
    for k=1:17
        n=n+1;
        if n>ns, fprintf(f,'%3d',0);
        elseif ~leo
            fprintf(f,'G%02d',sscanf(sats{n},'GPS%d'));
        else
            fprintf(f,'L%02d',n);
        end
    end
    fprintf(f,'\n');
end
for n=1:5
    fprintf(f,'++       '); for m=1:17, fprintf(f,'%3d',0); end, fprintf(f,'\n');
end
comment2='';
if leo
    for n=1:length(sats)
        comment2=[comment2,sprintf('L%02d=%s ',n,sats{n})];
    end
end
fprintf(f,'%%c cc cc ccc ccc cccc cccc cccc cccc ccccc ccccc ccccc ccccc\n');
fprintf(f,'%%c cc cc ccc ccc cccc cccc cccc cccc ccccc ccccc ccccc ccccc\n');
fprintf(f,'%%f  0.0000000  0.000000000  0.00000000000  0.000000000000000\n');
fprintf(f,'%%f  0.0000000  0.000000000  0.00000000000  0.000000000000000\n');
fprintf(f,'%%i    0    0    0    0      0      0      0      0         0\n');
fprintf(f,'%%i    0    0    0    0      0      0      0      0         0\n');
fprintf(f,'/* %-57s\n',['GENERATED BY GPSTOOLS, REFERENCE CLOCK : ',refc]);
fprintf(f,'/* %-57.57s\n',comment);
fprintf(f,'/* %-57.57s\n',comment2);
fprintf(f,'/* %-57.57s\n','');

% write sp3 body ---------------------------------------------------------------
function WriteBody(f,td,time,sats,ephs,clks,pv,leo)
C=299792458; nanv=999999.999999;
for n=1:length(time)
    fprintf(f,'*  %04d %2d %2d %2d %2d %11.8f\n',mjdtocal(td,time(n)));
    for m=1:length(sats)
        if ~leo
           s='G'; no=sscanf(sats{m},'GPS%d');
        else
           s='L'; no=m;
        end
        pos=ephs(n,1:3,m)/1E3;  if isnan(pos(1)), pos=repmat(nanv,1,3); end
        vel=ephs(n,4:6,m)*1E1;  if isnan(vel(1)), vel=repmat(nanv,1,3); end
        clk=clks(n,1,m)/C*1E6;  if isnan(clk), clk=nanv; end
        cdf=clks(n,2,m)/C*1E10; if isnan(cdf), cdf=nanv; end
        fprintf(f,'P%c%02d %13.6f %13.6f %13.6f %13.6f\n',s,no,pos,clk);
        if pv=='V'
            fprintf(f,'V%c%02d %13.6f %13.6f %13.6f %13.6f\n',s,no,vel,cdf);
        end
    end
end
fprintf(f,'EOF\n');

% read estimated ephemeris and clock (ecef) ------------------------------------
function [ephs,clks,refc]=ReadEphClk(td,time,sats,idir,fb,tunit)
ephs=repmat(nan,[length(time),6,length(sats)]);
clks=repmat(nan,[length(time),2,length(sats)]);
for n=1:length(sats)
    [te,xe,ve,pe]=readest(td,time,'eph',sats{n},idir,fb,tunit);
    [tc,xc,vc,pc]=readest(td,time,'clk',sats{n},idir,fb,tunit);
    [tt,i,j]=intersect(time,te); if ~isempty(i), ephs(i,:,n)=xe(j,1:6); end
    [tt,i,j]=intersect(time,tc); if ~isempty(i), clks(i,:,n)=xc(j,1:2); end
end
if isempty(pe), return, end
if ~isempty(pc)
    if ischar(pc.clkref), refc=pc.clkref;
    elseif pc.clkref, refc=pc.rcvs{1};
    else refc=''; end
end
srcs={'','igs','igu','bulb','bula'};
if pe.est.erp==1
    erp=repmat(nan,length(time),3);
    [tr,xr,vr,pr]=readest(td,time,'erp','',idir,fb,tunit);
    [tt,i,j]=intersect(time,tr); if ~isempty(i), erp(i,:)=xr(j,:); end
end
if isfield(pe.src,'erp'), erpsrc=pe.src.erp; else erpsrc=srcs{pe.est.erp}; end
for n=1:length(time)
    tu=td+(time(n)+19+pe.utc_tai)/86400;
    if pe.est.erp==0
        erp_value=pe.erp;
    elseif pe.est.erp==1
        erp_value=[erp(n,1:2)*pi/180/3600,erp(n,3),pe.erp(4:5)];
    else
        erp_value=readerp(tu,pe.dirs.erp,erpsrc);
    end
    if pe.erpvar, erp_value(1:3)=erp_value(1:3)+erpvar(tu,pe.utc_tai); end
    [U,a,b,gmst,dx,dy,du]=ecsftoecef(tu,erp_value,pe.utc_tai);
    for m=1:length(sats) % eci->ecef
        ephs(n,4:6,m)=U*ephs(n,4:6,m)'+du*ephs(n,1:3,m)';
        ephs(n,1:3,m)=U*ephs(n,1:3,m)';
    end
end

% read estimated leo position and clock (ecef) ---------------------------------
function [ephs,clks,refc]=ReadPosClk(td,time,sats,idir,fb,tunit)
ephs=repmat(nan,[length(time),6,length(sats)]);
clks=repmat(nan,[length(time),2,length(sats)]);
refc='';
for n=1:length(sats)
    [te,xe,ve,pe]=readest(td,time,'pos',sats{n},idir,fb,tunit);
    [tc,xc,vc,pc]=readest(td,time,'clk',sats{n},idir,fb,tunit);
    [tt,i,j]=intersect(time,te); if ~isempty(i), ephs(i,1:size(xe,2),n)=xe(j,:); end
    [tt,i,j]=intersect(time,tc); if ~isempty(i), clks(i,1:size(xc,2),n)=xc(j,:); end
end
